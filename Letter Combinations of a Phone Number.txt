import java.util.*;

public class PhoneLetterBacktrack {

    static String[] keypad = {
        "",     // 0 - unused
        "",     // 1 - unused
        "abc",  // 2
        "def",  // 3
        "ghi",  // 4
        "jkl",  // 5
        "mno",  // 6
        "pqrs", // 7
        "tuv",  // 8
        "wxyz"  // 9
    };

    public static void backtrack(String digits, int index, StringBuilder current, List<String> result) {
        if (index == digits.length()) {
            result.add(current.toString());
            return;
        }

        String letters = keypad[digits.charAt(index) - '0'];
        for (char ch : letters.toCharArray()) {
            current.append(ch);                          
            backtrack(digits, index + 1, current, result); 
            current.deleteCharAt(current.length() - 1);  
        }
    }

    public static List<String> getCombinations(String digits) {
        List<String> result = new ArrayList<>();
        if (digits == null || digits.length() == 0) return result;

        backtrack(digits, 0, new StringBuilder(), result);
        return result;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String digits = sc.nextLine();

        List<String> combinations = getCombinations(digits);
        
        if (combinations.isEmpty()) {
            System.out.println("[]");
        } else {
            System.out.println(combinations);
        }
    }
}
